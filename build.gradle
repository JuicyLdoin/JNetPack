plugins {
    id 'java'
    id 'maven-publish'
}

group = 'net.jnetpack'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    compileOnly 'org.jetbrains:annotations:24.1.0'
    annotationProcessor 'org.jetbrains:annotations:24.1.0'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // https://mvnrepository.com/artifact/org.reflections/reflections
    implementation 'org.reflections:reflections:0.10.2'
    // https://mvnrepository.com/artifact/io.netty/netty-all
    implementation 'io.netty:netty-all:4.1.101.Final'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:32.1.3-jre'
}

test {
    useJUnitPlatform()
}

tasks.with {
    withType(JavaCompile).tap {
        configureEach {
            options.encoding = 'UTF-8'
            options.compilerArgs << '-Xlint:none'
        }
    }
    processResources.filter { it.replace('\$version', version as String) }
}

jar {
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}